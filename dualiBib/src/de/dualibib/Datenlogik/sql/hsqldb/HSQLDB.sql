/**
 * Author:  Tim Lorse
 * Created: 17.04.2018
 * Last Change: 24.04.2018
 */
-- Löscht das angegebene Schema, wenn es leer ist
--DROP SCHEMA dualibib IF EXISTS;
-- Löscht das angegebene Schema inklusive der Tabellen
DROP SCHEMA dualibib IF EXISTS CASCADE;

-- Erstellt das Schema
CREATE SCHEMA dualibib;
-- Setzt das Logging für HSQLDB
SET DATABASE EVENT LOG LEVEL 3;
SET DATABASE EVENT LOG SQL LEVEL 3;


---- Löschen(DROP)
-- Löscht ansichten (Views)

-- Löscht Trigger

-- Löscht Tabellen(Table)



---- Erstellen(Create)
-- Erstellt Tabellen(Table)
-- ohne Fremdschlüssel
CREATE TABLE dualibib.user(
  u_ID              INTEGER         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
  u_Vorname         VARCHAR(150)    NOT NULL,
  u_Nachname        VARCHAR(150)    NOT NULL,
  u_login           VARCHAR(8)      UNIQUE NOT NULL,
  u_password        VARCHAR(192)    NOT NULL,
  u_Mitarbeiter     BOOLEAN         DEFAULT FALSE,
  CONSTRAINT u_uID_PK PRIMARY KEY (u_ID)
);

CREATE TABLE dualibib.genre(
  g_ID              INTEGER         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
  g_name            VARCHAR(150)    UNIQUE NOT NULL,
  CONSTRAINT g_gID_PK PRIMARY KEY (g_ID)
);

CREATE TABLE dualibib.kategoriemedien(
  km_ID             INTEGER         NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1),
  km_name           VARCHAR(150)    UNIQUE,
  km_beschreibung   VARCHAR(500),
  CONSTRAINT km_kmID_PK PRIMARY KEY (km_ID)
);
-- mit Fremdschlüssel
CREATE TABLE dualibib.tmp1(
  
);

-- Erstellt Ansichten(Views)
CREATE VIEW dualibib.tmp2(
  
);

-- Erstellen von Trigger
--BSP:
CREATE TRIGGER dms.UPDATE_Daten_ON_DELETE
  AFTER DELETE ON dms.user
  REFERENCING 
  NEW AS newrow
  OLD AS oldrow
  FOR EACH ROW 
  BEGIN ATOMIC
  UPDATE dms.daten SET u_ID = 1 WHERE u_ID = (SELECT u_ID FROM dms.user WHERE u_Username LIKE oldrow.U_USERNAME);
END;





---- Einfügen(Insert)
INSERT INTO dualibib.genre(g_name) VALUES ('');
INSERT INTO dualibib.kategoriemedien(km_name, km_beschreibung) VALUES ('', '');
-- Password: !Administrator@dualibib
-- Passwordalgorithmus: SHA-512
INSERT INTO dualibib.user(u_Vorname, u_Nachname, u_Login, u_password, u_mitarbeiter) 
VALUES ('Admin', 'Min', 'admin001', '1f91db1eb1781471c712d1001a21971a01611ab1431601491881da1ed19111c12213e1df1241111ad1f014b1b214c1de1041f61ca1681371621c710318719612113213a1b81cc11a1ea10e1841c11d11c01851d21571a412a14111a13718d1e6', true);